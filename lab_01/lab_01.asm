StkSeg  SEGMENT PARA STACK 'STACK'     ;Сегмент стека (Да я знаю, что я кэп)
        DB      200h DUP (?)           ;DUP нужна для резервирования большого кол-ва памяти, в данном случае она резервирует под стек 200 * 16 / 10 байт (символ h означет шестнадцатеричный)
StkSeg  ENDS                           ;Конец сегмента

DataS   SEGMENT WORD 'DATA'
HelloMessage    DB   13                ;курсор поместить в нач. строки
                DB   10                ;перевести курсор на нов. строку
                DB   'Hello, world !'  ;текст сообщения
                DB   '$'               ;ограничитель для функции DOS
DataS   ENDS
;
Code    SEGMENT WORD 'CODE'
        ASSUME  CS:Code, DS:DataS
DispMsg:
        mov   AX,DataS                 ;загрузка в AX адреса сегмента данных
        mov   DS,AX                    ;установка DS
        mov   DX,OFFSET HelloMessage   ;DS:DX - адрес строки
        mov   AH,9                     ;АН=09h выдать на дисплей строку
        int   21h                      ;вызов  функции DOS
        mov   AH,7                     ;АН=07h ввести символ без эха
        int   21h                      ;вызов  функции DOS
        mov   AH,4Ch                   ;АН=4Ch завершить процесс
        int   21h                      ;вызов  функции DOS
Code    ENDS
        END   DispMsg

;Всё очень просто.
;Директива ASSUME нужна для того, чтобе показать программе транслятору
;какими данными можно манипулировать. Но на код она никак не влияет!!
;В начеле необходимо присвоить общему регистру адрес сегмента, потом уже в сегментныйй регистр поместить значение общего регистра.
;Иначе сделать нельзя ввиду устройства процессоров (Процессор - та ещё х...)
Кстати после директивы END можно писать комментарии и без необходимого символа, хех)
END [Необязательная метка, указывающая на точку входа программы]
